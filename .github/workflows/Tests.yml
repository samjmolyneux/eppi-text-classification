name: Tests

on:
  push:
    branches:
      - dev

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.11']
      fail-fast: false
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[test]
        python -m spacy download en_core_web_sm

    - name: Check correct installation
      run: python tests/check_install.py

    - name: Test with Ruff
      id: lint
      run: ruff check eppi_text_classification/
      continue-on-error: true

    - name: Set Lint Success
      id: set-lint-success
      run: echo "${{ steps.lint.outcome == 'success' }}" > lint_success.txt
      continue-on-error: true

    - name: Test with MyPy
      id: type_check
      run: mypy -p eppi_text_classification
      continue-on-error: true

    - name: Set Type Check Success
      id: set-type-check-success
      run: echo "${{ steps.type_check.outcome == 'success' }}" > type_check_success.txt
      continue-on-error: true

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: results-${{ matrix.os }}-${{ matrix.python-version }}
        path: |
          lint_success.txt
          type_check_success.txt

  aggregate-results:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        path: ./artifacts

    - name: Aggregate Lint Results
      id: aggregate-lint
      run: |
        lint_success=true
        for file in ./artifacts/**/lint_success.txt; do
          echo "Checking file: $file"
          cat "$file"
          if grep -q "false" "$file"; then
            lint_success=false
            break
          fi
        done
        echo "lint_success=$lint_success" >> $GITHUB_ENV

    - name: Aggregate Type Check Results
      id: aggregate-type-check
      run: |
        type_check_success=true
        for file in ./artifacts/**/type_check_success.txt; do
          if grep -q "false" "$file"; then
            type_check_success=false
            break
          fi
        done
        echo "type_check_success=$type_check_success" >> $GITHUB_ENV

    - name: Set Lint Badge
      if: ${{ env.lint_success == 'true' }}
      run: echo "![Lint](https://img.shields.io/badge/lint-success-brightgreen)" > lint_badge.md

    - name: Set Type Check Badge
      if: ${{ env.type_check_success == 'true' }}
      run: echo "![Type Check](https://img.shields.io/badge/type_check-success-brightgreen)" > type_check_badge.md

    # - name: Commit and Push Updated README
    #   if: ${{ env.lint_success == 'true' }} || ${{ env.type_check_success == 'true' }}
    #   run: |
    #     git config --global user.name 'github-actions[bot]'
    #     git config --global user.email 'github-actions[bot]@users.noreply.github.com'
    #     git add README.md
    #     git commit -m "Update README with test badges"
    #     git push
